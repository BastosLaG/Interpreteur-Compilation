
type token = 
  | Lvar of (
# 6 "parser.mly"
       (string)
# 7 "parser__mock.ml.mock"
)
  | Lsub
  | Lsc
  | Lreturn
  | Lopar
  | Lmul
  | Lint of (
# 5 "parser.mly"
       (int)
# 17 "parser__mock.ml.mock"
)
  | Lend
  | Ldiv
  | Lcpar
  | Lassign
  | Ladd

# 1 "parser.mly"
  
  open Ast.Syntax

# 29 "parser__mock.ml.mock"

let menhir_begin_marker =
  0

and xv_block =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 20 "parser.mly"
   _1
# 38 "parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    ((
# 20 "parser.mly"
         ( [] )
# 43 "parser__mock.ml.mock"
     : 'tv_block) : (
# 15 "parser.mly"
      (Ast.Syntax.block)
# 47 "parser__mock.ml.mock"
    )) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_block)

and menhir_end_marker =
  0
